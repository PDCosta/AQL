CREATE_DB=(
	"CREATE @AW TABLE Artist(Name VARCHAR PRIMARY KEY, Age INT, Country VARCHAR DEFAULT '\''ENG'\'');"
	"CREATE @RW TABLE Album(Title VARCHAR PRIMARY KEY, Art VARCHAR FOREIGN KEY @FR REFERENCES Artist(Name), Year INT);"
	"CREATE @AW TABLE Track(Title VARCHAR PRIMARY KEY, Alb VARCHAR FOREIGN KEY @IR REFERENCES Album(Title));"
)

SEC_IDX=(
	"CREATE INDEX CountryIdx ON Artist (Country);"
	"CREATE INDEX ArtIdx ON Album (Art);"
	"CREATE INDEX AlbIdx ON Track (Alb);"
)

INIT_DB=(
	"INSERT INTO Artist (Name, Age) VALUES ('\''Sam'\'', 22);"
	"INSERT INTO Artist (Name, Age, Country) VALUES ('\''Rob'\'', 25, '\''ITA'\'');"
	"INSERT INTO Artist (Name, Age, Country) VALUES ('\''Jon'\'', 40, '\''USA'\'');"
	"INSERT INTO Artist (Name, Age, Country) VALUES ('\''Ken'\'', 33, '\''AUS'\'');"
	"INSERT INTO Artist (Name, Age, Country) VALUES ('\''Ann'\'', 17, '\''USA'\'');"
	
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A0'\'', '\''Sam'\'', 2016);"
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A1'\'', '\''Sam'\'', 2008);"
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A2'\'', '\''Rob'\'', 2012);"
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A3'\'', '\''Jon'\'', 1998);"
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A4'\'', '\''Jon'\'', 2005);"
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A5'\'', '\''Jon'\'', 2001);"
	"INSERT INTO Album (Title, Art, Year) VALUES ('\''A6'\'', '\''Ken'\'', 2006);"
	
	"INSERT INTO Track (Title, Alb) VALUES ('\''Hello'\'', '\''A0'\'');"
	"INSERT INTO Track (Title, Alb) VALUES ('\''World'\'', '\''A0'\'');"
	"INSERT INTO Track (Title, Alb) VALUES ('\''Goodbye'\'', '\''A1'\'');"
	"INSERT INTO Track (Title, Alb) VALUES ('\''People'\'', '\''A1'\'');"
	"INSERT INTO Track (Title, Alb) VALUES ('\''Welcome'\'', '\''A2'\'');"
	"INSERT INTO Track (Title, Alb) VALUES ('\''Friend'\'', '\''A2'\'');"
)

QUERIES1=(
	"SELECT \* FROM Album WHERE Year > 2000 AND Art = '\''Jon'\'' OR Year < 2018 AND Year > 2002;"
	"SELECT \* FROM Album WHERE Year > 2010 OR Art = '\''Jon'\'' AND Year < 2018 AND Art = '\''Ken'\'';"
	"SELECT \* FROM Album WHERE Year > 2010 OR (Art = '\''Jon'\'' AND Year < 2018 AND Art = '\''Ken'\'');"
	"SELECT \* FROM Album WHERE ((Year > 2000 AND Art = '\''Jon'\'') OR Year < 2018) AND Year > 2002;"
)
EXPECTED1=(6 2 2 5) # number of tuples expected to be returned by each of the queries

QUERIES2=(
	"SELECT \* FROM Artist WHERE Age > 25;"
	"SELECT \* FROM Artist WHERE Name = '\''Sam'\'' OR Country = '\''ITA'\'';"
	"SELECT \* FROM Artist WHERE Age > 25 OR (Country = '\''USA'\'' AND Age < 20);"
	## "SELECT \* FROM Artist WHERE Age > 25 OR (Country = '\''USA'\'' AND Age < 20);"
)
EXPECTED2=(2 2 3)

QUERIES3=(
	"SELECT Name, Country FROM Artist WHERE Age >= 20 AND Age <= 33;"
	"SELECT Alb FROM Track WHERE Title >= '\''People'\'' OR Alb = '\''A2'\'';"
	"SELECT Title FROM Album WHERE Year >= 1998 AND Year <= 2005 OR Art = '\''Ken'\'';"
)
EXPECTED3=(3 4 4)

## Test 1 -- no secondary indexes
TEST1[0]="${CREATE_DB[@]}"
TEST1[1]="${INIT_DB[@]}"
TEST1[2]="${QUERIES1[@]}"
TEST1[3]="${EXPECTED1[@]}"

## Test 2 -- with secondary indexes
TEST2[0]="${CREATE_DB[@]} ${SEC_IDX[@]}"
TEST2[1]="${INIT_DB[@]}"
TEST2[2]="${QUERIES2[@]}"
TEST2[3]="${EXPECTED2[@]}"

## Test 3 -- test projection
TEST3[0]="${CREATE_DB[@]} ${SEC_IDX[@]}"
TEST3[1]="${INIT_DB[@]}"
TEST3[2]="${QUERIES3[@]}"
TEST3[3]="${EXPECTED3[@]}"

## Test 4 -- first, data insertion; second, index creation
TEST4[0]="${CREATE_DB[@]}"
TEST4[1]="${INIT_DB[@]} ${SEC_IDX[@]}"
TEST4[2]="${QUERIES3[@]}"
TEST4[3]="${EXPECTED3[@]}"
